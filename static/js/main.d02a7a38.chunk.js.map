{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","redux/phonebook/phonebook-selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContacts","contactsReducer","createReducer","actions","state","filter","filterReducer","_","phoneBookReducers","combineReducers","contacts","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","phonebook","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","storePersistor","persistor","persistStore","ContactForm","useState","setName","setNumber","dispatch","useDispatch","handleChange","event","currentTarget","value","reset","className","Styles","form","onSubmit","preventDefault","alert","label","type","pattern","title","required","onChange","input1","input2","button","getFilter","getVisibleContacts","getContacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","list","map","li","onClick","Filter","e","input","App","contactsLength","length","container","h1","h2","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d02a7a38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1QlQQ\",\"li\":\"ContactList_li__1wRvi\",\"button\":\"ContactList_button__1b5R0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__13agS\",\"h1\":\"App_h1__1dUNn\",\"h2\":\"App_h2__3eXnQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__33Ibq\",\"input\":\"Filter_input__2Qxyb\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('contacts/add', (name, number) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\nexport const deleteContact = createAction('contacts/delete');\r\nexport const filterContacts = createAction('contacts/filterContacts');","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './phonebook-actions';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [actions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst phoneBookReducers = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default phoneBookReducers;","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phoneBookReducers from './phonebook/phonebook-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(contactsPersistConfig, phoneBookReducers),\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst storePersistor = { store, persistor };\r\n\r\nexport default storePersistor;","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\nimport Styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (name === '' || number === '') {\r\n      return alert('Enter data!');\r\n    }\r\n\r\n    dispatch(actions.addContact(name, number));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={Styles.form} onSubmit={handleSubmit}>\r\n      <label className={Styles.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n          className={Styles.input1}\r\n        />\r\n      </label>\r\n\r\n      <label className={Styles.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n          className={Styles.input2}\r\n        />\r\n      </label>\r\n      <button className={Styles.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;","export const getContacts = state => state.phonebook.contacts;\r\nexport const getFilter = state => state.phonebook.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\nimport { getVisibleContacts } from '../../redux/phonebook/phonebook-selectors';\r\nimport Styles from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={Styles.list}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={Styles.li}>\r\n            <span>\r\n              {name}: {number}\r\n            </span>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => dispatch(actions.deleteContact(id))}\r\n              className={Styles.button}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={Styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => dispatch(actions.filterContacts(e.currentTarget.value))}\r\n        className={Styles.input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default Filter;","import { useSelector } from 'react-redux';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Styles from './App.module.css';\n\nfunction App() {\n  const contactsLength = useSelector(\n    state => state.phonebook.contacts.length > 1,\n  );\n\n  return (\n    <div className={Styles.container}>\n      <h1 className={Styles.h1}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={Styles.h2}>Contacts</h2>\n      {contactsLength && <Filter />}\n\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport storePersistor from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={storePersistor.store}>\n      <PersistGate loading={null} persistor={storePersistor.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2CQ4y\",\"label\":\"ContactForm_label__3-rH2\",\"button\":\"ContactForm_button__1kpCE\",\"input1\":\"ContactForm_input1__2kAhk\",\"input2\":\"ContactForm_input2__3BoGD\"};"],"sourceRoot":""}